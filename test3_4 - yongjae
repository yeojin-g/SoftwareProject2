import pickle

dbfilename = 'test3_4.dat'

def readScoreDB(): #1
    try:
        fH = open(dbfilename, 'rb')
    except FileNotFoundError as e:
        print("New DB: ", dbfilename)
        return []

    scdb = []
    try:
        scdb =  pickle.load(fH)
    except:
        print("Empty DB: ", dbfilename)
    else:
        print("Open DB: ", dbfilename)
    fH.close()
    print("scdb:[")
    for i in scdb:
        print(i)
    print("]")
    return scdb


# write the data into person db
def writeScoreDB(scdb):#3
    fH = open(dbfilename, 'wb')
    pickle.dump(scdb, fH)
    fH.close()


def doScoreDB(scdb):#2
    while(True):
        inputstr = (input("Score DB > "))
        if inputstr == "":
            continue

        parse = inputstr.split(" ")

        if parse[0] == 'add':
            record = {'Name':parse[1], 'Age':parse[2], 'Score':parse[3]}
            scdb += [record]

        elif parse[0] == 'del': #이슈2 해결
            for p in scdb[::-1]:
                if p['Name'] == parse[1]:
                    scdb.remove(p)


        elif parse[0] == 'show':
            sortKey ='Name' if len(parse) == 1 else parse[1]
            showScoreDB(scdb, sortKey)#2-show

        elif parse[0] == 'find':
            try:
                for i in scdb: #이슈1 해결
                    if i["Name"] == parse[1]:
                        print(i)

            except:
                print("아래 이름들중 입력 바랍니다")
                for i in scdb: #이슈3 해결
                    print(i["Name"])
                continue

        elif parse[0] == 'inc':
            try:
                for i in scdb: #이슈4 해결
                    if i["Name"] == parse[1]:
                        i['Score'] = str(int(i['Score']) + int(parse[2]))
            except:
                continue

        elif parse[0] == 'quit':
            break

        else:
            print("Invalid command: " + parse[0])


def showScoreDB(scdb, keyname):#2-show
    for p in sorted(scdb, key=lambda person: person[keyname]):
        for attr in sorted(p):
            print(attr + "=" + p[attr], end=' ')
        print()


scoredb = readScoreDB()
doScoreDB(scoredb)
writeScoreDB(scoredb)
